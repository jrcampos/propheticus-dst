import collections

import propheticus
import propheticus.core
import propheticus.shared

from InstanceConfig import InstanceConfig


class InstanceGUI(propheticus.core.GUI):
    def __init__(self):
        super(InstanceGUI, self).__init__()

        self.initializeDatabasesConfigurations()

    def initializeDatabasesConfigurations(self):
        self.ProjectsConfigurations = {
            'projects': []
        }

        self.ProjectsConfigurations = collections.OrderedDict(sorted(self.ProjectsConfigurations.items()))

    '''
    Data generation menu
    '''
    def menuCustom(self, choice=0):
        MenuData = {
            '1': {'name': 'Select Projects', 'callback': propheticus.shared.Utils.generalMenuData(self, 'Projects', sorted([key for key, value in InstanceConfig.ProjectIdMap.items()]), Configurations=self.ProjectsConfigurations)},
            '2': {'name': 'Generate Datasets for Current Configurations', 'callback': self.generateDatabasesChoice},
            '-': '',
            '0': {'name': 'Back'}
        }
        propheticus.shared.Utils.printMenu('Data Generation Menu', MenuData, 'ProjectsConfigurations', self)

    '''
    Data generation for current configurations function
    '''
    def generateDatabasesChoice(self, choice):
        propheticus.shared.Utils.printWarningMessage('Not implemented in the demo')
